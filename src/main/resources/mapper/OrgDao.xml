<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ipincloud.iotbj.srv.dao.OrgDao">
    <resultMap type="com.ipincloud.iotbj.srv.domain.Org" id="OrgMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="type" column="type" jdbcType="VARCHAR"/>
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
        <result property="sort" column="sort" jdbcType="INTEGER"/>
        <result property="dataScope" column="data_scope" jdbcType="VARCHAR"/>
        <result property="stop" column="stop" jdbcType="VARCHAR"/>
        <result property="memo" column="memo" jdbcType="VARCHAR"/>
        <result property="parentTitle" column="parent_title" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="orgIndexCode" column="orgIndexCode" jdbcType="VARCHAR"/>
        <result property="parentOrgIndexCode" column="parentOrgIndexCode" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="queryById" resultMap="OrgMap">
            select * from org where id=#{id}
        </select>


    <select id="queryTreeHp" resultType="java.util.Map">
        select l.id,l.type,l.parent_id,l.title,count(m.id) as hy_extra_num from (
        select distinct l.id,l.parent_id from org l
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like" and item.val != null and item.val !="" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        ) m,(select distinct l.id,l.type,l.parent_id,l.title from org l
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like"  and item.val != null and item.val !=""  '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        ) l where m.parent_id=l.id or m.id = l.id group by l.id
    </select>


    <select id="queryTreeNp" resultType="java.util.Map">
        select l.id,l.type,l.parent_id,l.title,count(m.id) as hy_extra_num from (
        select distinct l.id,l.parent_id from org l
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like"  and item.val != null and item.val !=""  '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test="item.op == 'in' ">
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        ) m,(select distinct l.id,l.type,l.parent_id,l.title from org l
        where l.parent_id not in (
        select distinct l.id from org l
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like"  and item.val != null and item.val !="" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        )
        <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
            <foreach collection="jsonObj.qps" item="item" index="index">
                <if test='item.op == "like"  and item.val != null and item.val !="" '>
                    and ${item.name} like concat('%',#{item.val},'%')
                </if>
                <if test='item.op == "=" or item.op == "" or item.op == null '>
                    and ${item.name} = #{item.val}
                </if>
                <if test='item.op == "in" '>
                    and ${item.name} in
                    <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">#{item2}
                    </foreach>
                </if>
            </foreach>
        </if>

        ) l where m.parent_id=l.id or m.id = l.id group by l.id
    </select>


    <insert id="addInst" useGeneratedKeys="true" keyProperty="jsonObj.id">
        insert into org
        <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">
            ${key}
        </foreach>
        values
        <foreach collection="jsonObj.keys" item="key" open="(" close=")" separator=",">
            #{jsonObj[${key}]}
        </foreach>
    </insert>

    <insert id="insertOrUpdateOrg">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(*) as count from org where orgIndexCode = #{info.orgIndexCode}
        </selectKey>
        <if test="count==0">
            insert into org (parent_id,parent_title,orgIndexCode,title, parentOrgIndexCode,type,stop)
            values
            (#{info.parent_id},#{info.parent_title},#{info.orgIndexCode}, #{info.title},
            #{info.parentOrgIndexCode},'部门','f')
        </if>
        <if test="count>0">
            UPDATE org SET title =#{info.title},
            parentOrgIndexCode=#{info.parentOrgIndexCode},
            parent_id = #{info.parent_id},
            parent_title = #{info.parent_title}
            WHERE orgIndexCode=#{info.orgIndexCode}
        </if>
    </insert>


    <update id="updateInst" parameterType="java.util.Map">
        UPDATE org SET
        <foreach collection="jsonObj.keys" item="key" separator=",">
            <if test="key != 'id' ">
                ${key} = #{jsonObj[${key}]}
            </if>
        </foreach>
        where id = #{jsonObj.id}
    </update>


    <select id="orgQuery" resultType="java.util.Map">
        select * from org
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test="item.op == 'like' ">
                        and ${item.tb}.${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.tb}.${item.name} = #{item.val}
                    </if>
                    <if test="item.op == 'in' ">
                        and ${item.tb}.${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 ">
            order by
            <foreach item="item" collection="jsonObj.sps" index="index" separator=",">
                ${item.name} ${item.orderV}
            </foreach>
        </if>
    </select>


    <select id="countOrgList" resultType="java.lang.Integer">
        select count(distinct id) from org
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like" and item.val != null and item.val !="" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
    </select>


    <select id="orgList" resultType="java.util.Map">
        select org.id,org.type,org.title from org
        <where>
            <if test="jsonObj.qps != null and jsonObj.qps.size() > 0">
                <foreach collection="jsonObj.qps" item="item" index="index">
                    <if test='item.op == "like" and item.val != null and item.val !="" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </if>
        </where>
        <if test="jsonObj.sps != null and jsonObj.sps.size() > 0 ">
            order by
            <foreach item="item" collection="jsonObj.sps" index="index" separator=",">
                ${item.name} ${item.orderV}
            </foreach>
        </if>
        <if test="jsonObj.startIndex != null and jsonObj.rop!=null ">
            limit #{jsonObj.startIndex},#{jsonObj.rop}
        </if>
    </select>


    <delete id="deletesInst" parameterType="java.util.Map">
        <if test="jsonObj.org!=null and jsonObj.org.size()>0">
            delete from org
            <where>
                <foreach collection="jsonObj.org" item="item" index="index">
                    <if test='item.op == "like" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </where>
        </if>
    </delete>


    <select id="listDeleteOrg" resultType="com.alibaba.fastjson.JSONObject">
        <if test="jsonObj.org!=null and jsonObj.org.size()>0">
            select * from org
            <where>
                <foreach collection="jsonObj.org" item="item" index="index">
                    <if test='item.op == "like" '>
                        and ${item.name} like concat('%',#{item.val},'%')
                    </if>
                    <if test='item.op == "=" or item.op == "" or item.op == null '>
                        and ${item.name} = #{item.val}
                    </if>
                    <if test='item.op == "in" '>
                        and ${item.name} in
                        <foreach item="item2" collection="item.val" index="index2" open="(" separator="," close=")">
                            #{item2}
                        </foreach>
                    </if>
                </foreach>
            </where>
        </if>
    </select>

    <select id="queryByIds" resultType="java.lang.String">
        select personId from user
        <where>
            id in
            <foreach item="id" collection="ids" index="index2" open="(" separator="," close=")">
                #{id}
            </foreach>
            and personId!=''
        </where>
    </select>

    <select id="queryByName" resultType="com.ipincloud.iotbj.srv.domain.Org">
        select * from org where title = #{name} limit 1
    </select>

    <select id="queryByIndexCode" resultType="com.ipincloud.iotbj.srv.domain.Org">
        select * from org where orgIndexCode = #{orgIndexCode} limit 1
    </select>

    <delete id="deleteOrgPerson">
        delete from org where id in (
        select id from user where personId in
        <foreach collection="deleteIds" item="personId" index="index2" open="(" separator="," close=")">
            #{personId}
        </foreach>
        )
    </delete>

    <delete id="deleteUserPerson">
        delete from user where personId in
        <foreach collection="deleteIds" item="personId" index="index2" open="(" separator="," close=")">
            #{personId}
        </foreach>
    </delete>

    <update id="deletesByOrgIndexCode">
        update org set stop='t' where orgIndexCode in
        <foreach collection="list" item="orgIndexCode" index="index2" open="(" separator="," close=")">
            #{orgIndexCode}
        </foreach>
    </update>
</mapper>
